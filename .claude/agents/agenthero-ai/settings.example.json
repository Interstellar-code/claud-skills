{
  "version": "2.0.0",
  "schema_version": "1.0.0",
  "last_updated": "2025-10-24T12:00:00Z",
  "description": "Example settings file for AgentHero AI agent. Copy to settings.json and customize.",

  "workflow": {
    "enabled": true,
    "enforce_step_order": true,
    "require_user_approval_between_phases": true,
    "auto_approval_mode": false,

    "phases": [
      {
        "id": "phase-1-requirements",
        "name": "Requirements Analysis",
        "order": 1,
        "required": true,
        "steps": [
          {
            "id": "parse-spec",
            "name": "Parse specification file",
            "required": true,
            "validation": {
              "must_exist": ["spec_file_path"],
              "must_not_be_empty": ["spec_content"]
            },
            "completion_criteria": [
              "spec_file_exists",
              "spec_file_parsed",
              "spec_format_valid"
            ]
          },
          {
            "id": "extract-requirements",
            "name": "Extract requirements from spec",
            "required": true,
            "depends_on": ["parse-spec"],
            "validation": {
              "min_requirements": 1,
              "required_fields": ["title", "description", "priority"]
            },
            "completion_criteria": [
              "requirements_extracted",
              "requirements_count > 0",
              "all_requirements_valid"
            ]
          },
          {
            "id": "extract-deliverables",
            "name": "Extract deliverables from spec",
            "required": true,
            "depends_on": ["parse-spec"],
            "validation": {
              "min_deliverables": 1,
              "required_fields": ["name", "type", "path"]
            },
            "completion_criteria": [
              "deliverables_extracted",
              "deliverables_count > 0",
              "all_deliverables_valid"
            ]
          },
          {
            "id": "extract-acceptance-criteria",
            "name": "Extract acceptance criteria",
            "required": true,
            "depends_on": ["parse-spec"],
            "completion_criteria": [
              "acceptance_criteria_extracted",
              "criteria_count > 0"
            ]
          },
          {
            "id": "validate-spec",
            "name": "Validate spec completeness",
            "required": true,
            "depends_on": [
              "extract-requirements",
              "extract-deliverables",
              "extract-acceptance-criteria"
            ],
            "validation": {
              "required_sections": [
                "requirements",
                "deliverables",
                "acceptance_criteria"
              ]
            },
            "completion_criteria": [
              "spec_valid",
              "all_required_sections_present",
              "no_validation_errors"
            ]
          },
          {
            "id": "generate-requirements-summary",
            "name": "Generate requirements summary",
            "required": true,
            "depends_on": ["validate-spec"],
            "completion_criteria": [
              "summary_generated",
              "summary_includes_all_requirements"
            ]
          },
          {
            "id": "wait-user-approval-phase1",
            "name": "Wait for user approval of Phase 1",
            "required": true,
            "depends_on": ["generate-requirements-summary"],
            "completion_criteria": [
              "user_approval_received"
            ]
          }
        ]
      },
      {
        "id": "phase-2-agent-selection",
        "name": "Agent Selection",
        "order": 2,
        "required": true,
        "depends_on": ["phase-1-requirements"],
        "steps": [
          {
            "id": "analyze-requirements",
            "name": "Analyze requirements for agent needs",
            "required": true,
            "completion_criteria": [
              "requirements_analyzed",
              "agent_needs_identified"
            ]
          },
          {
            "id": "scan-agent-library",
            "name": "Scan agent library for matches",
            "required": true,
            "depends_on": ["analyze-requirements"],
            "validation": {
              "must_check": ["README.md", "agent registry"]
            },
            "completion_criteria": [
              "library_scanned",
              "matching_agents_identified"
            ]
          },
          {
            "id": "select-agents",
            "name": "Select appropriate agents",
            "required": true,
            "depends_on": ["scan-agent-library"],
            "validation": {
              "min_agents": 1,
              "max_agents": 10
            },
            "completion_criteria": [
              "agents_selected",
              "agent_count > 0",
              "all_agents_exist"
            ]
          },
          {
            "id": "justify-selections",
            "name": "Justify agent selections",
            "required": true,
            "depends_on": ["select-agents"],
            "completion_criteria": [
              "justification_provided",
              "justification_includes_all_agents"
            ]
          },
          {
            "id": "generate-agent-list",
            "name": "Generate agent list report",
            "required": true,
            "depends_on": ["justify-selections"],
            "completion_criteria": [
              "agent_list_generated"
            ]
          },
          {
            "id": "wait-user-approval-phase2",
            "name": "Wait for user approval of Phase 2",
            "required": true,
            "depends_on": ["generate-agent-list"],
            "completion_criteria": [
              "user_approval_received"
            ]
          }
        ]
      },
      {
        "id": "phase-3-execution-planning",
        "name": "Execution Planning",
        "order": 3,
        "required": true,
        "depends_on": ["phase-2-agent-selection"],
        "steps": [
          {
            "id": "create-execution-plan",
            "name": "Create execution plan",
            "required": true,
            "completion_criteria": [
              "execution_plan_created",
              "plan_includes_all_tasks"
            ]
          },
          {
            "id": "generate-agent-prompts",
            "name": "Generate detailed agent prompts",
            "required": true,
            "depends_on": ["create-execution-plan"],
            "validation": {
              "prompt_requirements": [
                "task_context",
                "requirements",
                "deliverables",
                "state_file_path",
                "instructions"
              ]
            },
            "completion_criteria": [
              "prompts_generated",
              "all_agents_have_prompts",
              "prompts_are_complete"
            ]
          },
          {
            "id": "define-dependencies",
            "name": "Define task dependencies",
            "required": true,
            "depends_on": ["create-execution-plan"],
            "completion_criteria": [
              "dependencies_defined",
              "no_circular_dependencies"
            ]
          },
          {
            "id": "create-state-structure",
            "name": "Create state file structure",
            "required": true,
            "depends_on": ["define-dependencies"],
            "validation": {
              "required_files": [
                "topic.json",
                "pm-state.json",
                "topicplan.md"
              ]
            },
            "completion_criteria": [
              "state_structure_created",
              "all_state_files_initialized"
            ]
          },
          {
            "id": "wait-user-approval-phase3",
            "name": "Wait for user approval of Phase 3",
            "required": true,
            "depends_on": ["create-state-structure"],
            "completion_criteria": [
              "user_approval_received"
            ]
          }
        ]
      },
      {
        "id": "phase-4-execution",
        "name": "Execution",
        "order": 4,
        "required": true,
        "depends_on": ["phase-3-execution-planning"],
        "steps": [
          {
            "id": "prepare-task-launch",
            "name": "Prepare task launch instructions",
            "required": true,
            "completion_criteria": [
              "launch_instructions_prepared",
              "all_prompts_ready"
            ]
          },
          {
            "id": "present-execution-plan",
            "name": "Present execution plan to user",
            "required": true,
            "depends_on": ["prepare-task-launch"],
            "completion_criteria": [
              "plan_presented",
              "user_can_review_prompts"
            ]
          },
          {
            "id": "wait-launch-approval",
            "name": "Wait for launch approval",
            "required": true,
            "depends_on": ["present-execution-plan"],
            "completion_criteria": [
              "user_approval_received"
            ]
          },
          {
            "id": "launch-agents",
            "name": "Launch sub-agents (via main session)",
            "required": true,
            "depends_on": ["wait-launch-approval"],
            "note": "PM agent returns control to main session for actual launch",
            "completion_criteria": [
              "launch_instructions_provided",
              "pm_agent_completed"
            ]
          }
        ]
      }
    ]
  },

  "behavior": {
    "error_handling": {
      "strategy": "stop",
      "options": ["stop", "continue", "ask_user"],
      "log_errors": true,
      "max_retries": 3
    },
    "validation": {
      "strictness": "strict",
      "options": ["strict", "moderate", "relaxed"],
      "fail_on_missing_required": true,
      "fail_on_invalid_format": true
    },
    "progress_reporting": {
      "enabled": true,
      "frequency_seconds": 30,
      "log_to_state_file": true,
      "update_todowrite": true
    },
    "user_interaction": {
      "require_approval_between_phases": true,
      "approval_timeout_seconds": null,
      "allow_phase_skip": false
    }
  },

  "features": {
    "documentation_generation": {
      "enabled": true,
      "auto_generate": true,
      "enforce": true,
      "agent": "agenthero-docs-expert",
      "trigger": "after_all_primary_tasks",
      "format": "markdown",
      "deliverables": ["README.md"],
      "location": "Project-tasks/{topic-slug}/deliverables/",
      "handover_context": {
        "include": [
          "all_deliverables_list",
          "task_summaries",
          "acceptance_criteria_complete",
          "technical_constraints",
          "spec_file_path"
        ]
      }
    },
    "qa_validation": {
      "enabled": true,
      "auto_validate": true,
      "enforce": true,
      "validator_agent": "agenthero-qa-validate",
      "trigger": "after_documentation",
      "depends_on": ["documentation_generation"],
      "handover_context": {
        "include": [
          "topicplan_path",
          "all_deliverables_paths",
          "acceptance_criteria_complete",
          "spec_file_path"
        ]
      }
    },
    "dashboard": {
      "enabled": true,
      "auto_refresh": true,
      "refresh_interval_seconds": 10,
      "script_path": ".claude/skills/agenthero-ai/scripts/multi_topic_dashboard.py"
    },
    "parallel_execution": {
      "enabled": true,
      "max_parallel_tasks": 10,
      "launch_strategy": "all_at_once"
    },
    "agent_library": {
      "auto_create_agents": true,
      "reuse_existing": true,
      "update_registry": true,
      "enforce_naming_conventions": true
    }
  },

  "paths": {
    "state_directory": ".claude/agents/state/agenthero-ai/",
    "topics_directory": ".claude/agents/state/agenthero-ai/topics/",
    "archive_directory": ".claude/agents/state/agenthero-ai/archive/",
    "project_tasks_directory": "Project-tasks/",
    "agent_library": ".claude/agents/",
    "templates": {
      "spec_template": ".claude/agents/agenthero-ai/spec-template.md",
      "topicplan_template": ".claude/agents/agenthero-ai/topicplan-template.md",
      "agent_template": ".claude/agents/agenthero-ai/orchestrated-sub-agent-template.md"
    }
  },

  "validation_rules": {
    "spec_file": {
      "required_sections": [
        "# Project Overview",
        "## Requirements",
        "## Deliverables",
        "## Acceptance Criteria"
      ],
      "required_metadata": [
        "title",
        "description"
      ],
      "min_requirements": 1,
      "min_deliverables": 1,
      "min_acceptance_criteria": 1
    },
    "deliverables": {
      "required_fields": ["name", "type", "path", "description"],
      "valid_types": ["file", "directory", "documentation", "code"],
      "path_format": "relative"
    },
    "state_files": {
      "schema_version": "2.0.0",
      "required_fields": {
        "topic.json": ["id", "title", "status", "createdAt", "tasks"],
        "pm-state.json": ["topic_id", "current_phase", "tasks", "execution_plan"],
        "task-*.json": ["task_id", "agent", "status", "progress", "state_file"]
      }
    }
  },

  "monitoring": {
    "state_update_frequency_seconds": 30,
    "progress_reporting_frequency_seconds": 30,
    "dashboard_refresh_interval_seconds": 10,
    "log_level": "info",
    "log_to_file": true,
    "log_file_path": ".claude/agents/state/agenthero-ai/agent.log"
  },

  "hooks": {
    "_comment": "⚠️ PHASE 2 FEATURE - Hooks are deferred to Phase 2. Set enabled=false for Phase 1.",
    "enabled": false,
    "sync_to_todowrite": true,
    "task_prefix": "[A:orch]",
    "progress_update_threshold": 10,
    "verbose": false,

    "events": {
      "pre_task_create": {
        "enabled": true,
        "description": "Before creating task state file",
        "actions": ["create_pending_todo", "log_task_creation"]
      },
      "post_task_create": {
        "enabled": true,
        "description": "After task state file created",
        "actions": ["update_todo_status", "sync_state_file"]
      },
      "task_progress_update": {
        "enabled": true,
        "description": "When task progress changes",
        "throttle_seconds": 30,
        "min_progress_change": 10,
        "actions": ["update_todo_activeForm", "show_progress_percentage"]
      },
      "task_complete": {
        "enabled": true,
        "description": "When task completes successfully",
        "actions": ["mark_todo_complete", "log_completion", "trigger_next_task"]
      },
      "task_error": {
        "enabled": true,
        "description": "When task encounters error",
        "actions": ["mark_todo_error", "log_error", "notify_user"]
      },
      "task_blocked": {
        "enabled": true,
        "description": "When task is blocked waiting for input",
        "actions": ["mark_todo_blocked", "show_blocking_question", "wait_for_answer"]
      },
      "phase_started": {
        "enabled": true,
        "description": "When workflow phase starts",
        "actions": ["create_phase_todo", "log_phase_start", "update_dashboard"]
      },
      "phase_complete": {
        "enabled": true,
        "description": "When workflow phase completes",
        "actions": ["mark_phase_complete", "log_phase_completion", "trigger_approval"]
      },
      "workflow_step_started": {
        "enabled": true,
        "description": "When workflow step begins",
        "actions": ["log_to_audit", "update_workflow_state"]
      },
      "workflow_step_complete": {
        "enabled": true,
        "description": "When workflow step finishes",
        "actions": ["log_to_audit", "mark_step_complete", "check_next_step"]
      },
      "agent_invoked": {
        "enabled": true,
        "description": "When sub-agent is launched",
        "actions": ["create_agent_todo", "log_invocation"]
      },
      "agent_completed": {
        "enabled": true,
        "description": "When sub-agent finishes",
        "actions": ["mark_agent_complete", "process_result"]
      }
    },

    "todowrite_integration": {
      "auto_create_todos": true,
      "show_progress_percentage": true,
      "show_blocking_status": true,
      "collapse_completed": false,
      "max_todos_visible": 20,
      "group_by_phase": true
    },

    "notification": {
      "on_error": true,
      "on_completion": true,
      "on_blocked": true,
      "sound_enabled": false
    }
  }
}
